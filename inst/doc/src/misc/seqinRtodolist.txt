o Find the correct references for the nonparametric statistics.

o There should be an argument circular in function count() to handle
   correctly the case of circular genomes.

o Interfacer gfrag pour pouvoir extraire un fragment de sequence par
   position.

o Citer article Biochimie 2007 Delmotte & Gouy quand ref complete dispo

o D'un e-mail de Manolo du 05-MARS-2007 :
  QUOTE
  J'ai ajoute 2 criteres de selection:
  NS= et NK= pour mettre une espece ou un mot-cle (@ possible) dans une liste
  UNQUOTE
  --> Mettre a jour la doc de query() et le manuel.
  
o La phase est perdue quand on fait un GC2() ou un GC3(), la propager comme
  pour getTrans. -- reponse partielle pour 1.1-3 : argument frame
  
o Implementer getSequence(as.tring = TRUE) pour ne pas vectoriser les chaines
  de caracteres automatiquement pour les requestes Web. Une fois implemente dans
  la version du CRAN de seqinr, modifier le script de 
  http://pbil.univ-lyon1.fr/members/lobry/repro/bioinfo04/

o dia.bactgensize() ne marche plus parce que l'URL n'est plus bonne. J'ai
  corrige ca en dur dans tdr222 (code chunk a la fin) mais je me demande
  si on ferait mieux de pas bazarder cette fonction. Bon, on peut voir si
  la modif de tdr222 tient la route un peu et laisser tomber sinon.

o Le site web pour la reproductibilite de l'article Bioinfo 
  http://pbil.univ-lyon1.fr/members/lobry/repro/bioinfo04/
  utilise une version obsolete de R et de seqinR. Le garder dans
  un coin et l'adapter a la derniere mouture de seqinR.
  
o La fonction uco() pour calculer l'usage du code :

  Elle ne gère pas correctement le code génétique pour les RSCU (mais bon, les RSCU
  c'est de la merde de toute façons).
  Elle ne récupère pas automatiquement la phase et le code génétique, la propager
  comme pour getTrans().
  
o Exemples de calculs d'indices d'usage du code dans la vignette du package


o Il vaudrait mieux que les exemples de la vignette soient si possible fait
  sur des banques frozen, sauf a montrer l'interest des daily updates.
  

o Faire en sorte que les erreurs du serveur ne generent pas d'erreur (stop)
  pour pouvoir mettre les examples en run et pas en dontrun. Ne faire que des
  warnings() sauf cas graves et mettre les exemple en suppressWarnings(expr).
  Donc try-catch(de tous les stop) des fonction de base...
  
o Recuperer automatiquement les annotations en entier.

o Mettre un note of caution dans la doc a propos des query(..., virtual = TRUE):
  les infos sont definitivement perdues si la socket est fermee.
 

------ PENDING --------

o Mettre un fichier par fonction dans seqinr/R/ ? -- en cours

o Le probleme du controsle trop strict sur acgt comme seuls chars acceptes. 
  Faire une option professionnelle read.fasta(checkIUPAC= c("dnastrict", "dnaambiguous",
  aastrict","aaambiguous","relax"), gapallowed = FALSE, gapchar = "-", forcetolower = FALSE)
  pour couvrir les cas les plus courrants sans perdre en tests inutiles. Le top, faire
  un "oracle" pour deviner le bon truc.
  
o Mettre la doc a jour sur la gestion des caracteres ambigus dans la vignette.

------ TOUT CA, CA A DEJA ETE FAIT ---

o faire de m16.seq un dataset standard (oriC chez E. coli). --> 1.1-3

o NA.GC dans GC() -- Fait pour 1.1-3 JRL

o Comment faire des fen^tres glissantes. Fait dans la FAQ pour 1.1-3

o Fichier CITATION a modifier quand ref disponible. -- Fait pour 1.1-1 JRL

o Doc pour GC() et consorts ˆ clarifier pour minuscules versus majuscules
  en input. -- Fait pour 1.0-7 JRL
  
o Etudier la faisabilite de recuperer les sequences en mode compresse.
  (idee de Christian depuis de Bresil)
  Implementer la possibilite de rapatrier directement les sequences au format
  fasta et autres du serveur avec
  extractseqs&{lrank=xx|seqnum=xx}&format=xx&operation=xx[&feature="xx"][&bounds="xx"][&minbounds="xx"]\n
  Utiliser l'API en C
  -- Fait en experimental pour 1.0-7 par Simon Penel avec l'aide de Manolo Gouy.

o getType() appele sans argument ne se demerde pas tout seul comme un grand
  pour trouver la socket qui va bien de la banque ouverte par defaut (comme
  le fait query() par exemple. -- fait pour 1.0-7 JRL

o File -> file dans read.alignment() -- fait pour 1.0-7 JRL

o Probleme souleve par Oliver (23-AUG-2006):

  Je voulais repondre a la requete du journal en incluant un exemple dans le
  <<Supplementary Methods>>, puis j'ai constate' en introduisant des vrais
  sequences d'ADN qu'il y avait toujours des legeres differences entre les
  resultats de GC2(), GC3() dans seqInR par rapport a codonW (et par rapport
  aux calculs du GC2 faits directement a partir des sequences proteiques).
  J'ai vu par la suite que la raison etait assez simple: quand ACNUC/query
  extrait un CDS, il inclut le codon stop, donc les operations de seqInR
  s'etalent egalement sur ces derniers trois nucleotides, tandis que le
  <<default>> de codonW c'est d'exclure le codon stop avant de faire ses
  calculs.

  Une solution (mise en FAQ pour 1.0-6) est:

  GC(s[1:(length(s) - 3)])

  mais ce n'est pas tres convivial. Ajouter une option "removeLastCodon" ?

o Controsle de la taille des caracteres dans tablecode() et option boldtex
  pour mettre certaines entrŽes en bold (faciliter la lecture des codes
  variants) -- fait pour 1.0-6 JRL
  
o Mettre aaindex en data ? -- fait pour 1.0-6 JRL

o Mettre dia=F par defaut dans tablecode -- fait pour 1.0-6 JRL

o Le rose est trop fashy dans example(chargaff) -- fait pour 1.0-6 JRL

o Probleme souleve par GP, une requeste de type f=nonmfic ne marche pas :

  read.table("sequence")
       V1
  1 AE013218

  > query("lista","f=sequence")

   Error in query("lista", "f=sequence") : invalid request:"file does not exist or is not adequate at (^): \"f=(^)sequence\""

  Mettre au moins la doc a jour (unimplemented)
  
  -- fait pour 1.0-5 JRL (voir crelistfromclientdata)

o Mieux documenter les nouvelles options de read.fasta dans la vignette.
  Faire un exemple avec A. thaliana ? -- Fait pour 1.0-5 JRL

o D'apres https://stat.ethz.ch/pipermail/bioconductor/2006-May/013082.html
  il serait utile d'avoir une fonction pour calculer la masse d'un peptide.
  -- fait pour 1.0-5 JRL

o Trouve le commentaire suivant dans la doc de la fonction readFASTA de 
  Biostrings de bioconductor:
  
  QUOTE
  There are many other packages that provide similar, but different capabilities. 
  The one in the package seqinr seems most similar but they separate the 
  biological sequence into single character strings, which is too inefficient 
  for large problems.
  UNQUOTE
  
  Donc rajouter une option as.string = FALSE pour desactiver le c2s si besoin
  est (mettre exemple dans la vignette). -- fait pour 1.0-5 JRL

o Probleme souleve par Marcus G Daniels 

	Hello,

	It seems to me that it is a bug in read.fasta that substr goes to nchar(nomseq) instead of nchar(nomseq[[i]]).
	The result of the current behavior (the former) is that some sequence names get truncated.

	Thanks!
  Le remercier dans la vignette.  -- Fait pour 1.0-5

o Pour read.alignment il manque des exemples pour le format fasta et clustal. -- Fait JRL pour 1.0-5

o Ka/Ks qui plante (voir avec Anouk). Truc zarbi: plus de NA dans la vignette
  a partir de la 2.1.1.... A suivre. -- Fait (bug dans le code C) JRL pour 1.0-4

o Mettre les downloads() de la vignette en data() de seqinR. -- Fait JRL pour 1.0-4

o Changer le mainteneur du site web de seqinR et mettre à jour. -- SP dec 2005

o Le bug qui survenait lorsque l'on fait un getAnnots avec un nombre de lignes  egal
  a 0 est resolu.   - SP
 
o Supprimer ou modifier le script compile qui est  est obsolete   - SP

o Revoir tablecode (Christian Request) e-mail du Tue, 26 Jul 2005 14:08:28 +0200
  tablecode a deux problèmes:
  1) de manière bizarre Ile se positionne mal, pourtant il semble que tu ais 
     bien utilisé une police fixe
  2) la dernière ligne est barrée, il faut décaler davantage la ligne de fin du tableau
  
  Faire une version qui genere la table en LaTeX (idee de Zan)
  
  Option LaTex Fait - JRL pour la 1.0-4 
  Bug de Christian difficile a reproduire, laisse beton.

o La fonction uco() pour calculer l'usage du code n'est pas tres rapide. - JRL pour 1.0-4
  Par exemple :
  > data(ec999)
  > system.time(tmp<-lapply(ec999,uco))
  [1]  82.83   1.59 104.63   0.00   0.00
  Plus d'une minute pour calculer l'usage du code de 999 CDS, c'est vraiment pas terrible.
  06-DEC-2005 - JRL:
  identification du facteur limitant : c'est splitseq() :
  > data(ec999)
  > system.time(tmp<-lapply(ec999,splitseq))
  [1] 60.59  0.73 72.55  0.00  0.00
  OK, j'ai commite une modif de splitseq() entierement re-ecrit, gain d'un facteur 10 environ
  > system.time(tmp<-lapply(ec999,uco))
  [1] 8.43 0.11 8.65 0.00 0.00
  
  Elle calcule le RSCU et les frequences relatives pour rien quand on en a pas besoin.
  C'est aussi modifie, ca ne gagne pas grand chose en perf - JRL pour 1.0-4

  
o Recuperation du code genetique qui va bien ? A verifier de pres, important.
  C'est fait dans la 1.0-3 normalement.

o Bug a 10^6 de getfrag (voir avec Delphine). Fait dans 1.0-3.

o Identification du client en tant que seqinr (Manolo request). Fait dans 1.0-3.

o Changer le DESCRIPTION du package pour changer le mainteneur. Verifier
  la visiblite (ce qui est vu de l'exterieur, i.e. sur le CRAN, voir avec Zan).
  Fait depuis la 1.0-3.

o Refbiblio a mettre a jour (article seqinr pour credibiliser le truc). Voir
  aussi citation() pour retourner la bonne ref.
  citation("seqinr") est mis en place depuis la 1.0-3, attente de la ref definitive.
